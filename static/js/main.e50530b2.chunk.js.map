{"version":3,"sources":["TodoItem.js","App.js","reportWebVitals.js","index.js"],"names":["TodoItemWrapper","styled","div","TodoContent","props","isDone","TodoButtonWrapper","Button","button","TodoItem","className","size","todo","handleDeleteTodo","handleToggleIsDone","data-todo-id","id","isHiden","content","onClick","filterStandard","all","done","undone","App","useState","todos","setTodos","value","setValue","filter","setFilter","useRef","map","handleFilterTodo","status","type","placeholder","onChange","e","target","current","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"q0BAGA,IAAMA,EAAkBC,IAAOC,IAAV,KAYfC,EAAcF,IAAOC,IAAV,KAEb,SAAAE,GAAK,OAAIA,EAAMC,QAAN,8CAKPC,EAAoBL,IAAOC,IAAV,KAEjBK,EAASN,IAAOO,OAAV,KAaG,SAASC,EAAT,GAAqF,IAAhEC,EAA+D,EAA/DA,UAAWC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,KAAMC,EAAwC,EAAxCA,iBAAkBC,EAAsB,EAAtBA,mBAC3E,OACE,eAACd,EAAD,CAAiBU,UAAWA,EAAWK,eAAcH,EAAKI,GAAIC,QAASL,EAAKK,QAA5E,UACE,cAACd,EAAD,CAAaE,OAAQO,EAAKP,OAAQM,KAAMA,EAAxC,SAA+CC,EAAKM,UACpD,eAACZ,EAAD,WACE,cAACC,EAAD,CAAQY,QAAS,WAAOL,EAAmBF,EAAKI,KAAhD,SACGJ,EAAKP,OAAS,qBAAQ,uBAEzB,cAACE,EAAD,CAAQY,QAAS,WAAMN,EAAiBD,EAAKI,KAA7C,gCC1CR,IAAMI,EAAiB,CACrBC,IAAK,kBAAM,GACXC,KAAM,SAACV,GAAD,OAAUA,EAAKP,QACrBkB,OAAQ,SAACX,GAAD,OAAWA,EAAKP,SAGX,SAASmB,IAAO,IAAD,EACFC,mBAAS,IADP,mBACrBC,EADqB,KACdC,EADc,OAEFF,mBAAS,IAFP,mBAErBG,EAFqB,KAEdC,EAFc,OAGAJ,mBAAS,OAHT,mBAGrBK,EAHqB,KAGbC,EAHa,KAItBf,EAAKgB,iBAAO,GAwBZlB,EAAqB,SAAAE,GACzBW,EAASD,EAAMO,KAAI,SAAArB,GACjB,OAAGA,EAAKI,KAAOA,EAAWJ,EACnB,2BACFA,GADL,IAEEP,QAASO,EAAKP,cAMdQ,EAAmB,SAAAG,GACvBW,EAASD,EAAMI,QAAO,SAAAlB,GAAI,OAAIA,EAAKI,KAAOA,OAGtCkB,EAAmB,SAAAC,GACvBJ,EAAUI,IAGZ,OACE,sBAAKzB,UAAU,MAAf,UACE,uBAAO0B,KAAK,OAAOC,YAAY,OAAOT,MAAOA,EAAOU,SA1B9B,SAACC,GACzBV,EAASU,EAAEC,OAAOZ,UA0BhB,wBAAQT,QA3Cc,WACxBQ,EAAS,CAAC,CACRX,GAAGA,EAAGyB,QACNvB,QAASU,EACTvB,QAAQ,IAHF,mBAIFqB,KACNG,EAAS,IACTb,EAAGyB,WAoCD,sBACA,wBAAQtB,QAjCY,WACtBQ,EAAS,KAgCP,0BACA,wBAAQR,QAAS,kBAAMe,EAAiB,QAAxC,iBACA,wBAAQf,QAAS,kBAAMe,EAAiB,SAAxC,gCACA,wBAAQf,QAAS,kBAAMe,EAAiB,WAAxC,gCAEER,EAAMI,OAAOV,EAAeU,IAASG,KAAI,SAAArB,GAAI,OAAI,cAACH,EAAD,CAAwBG,KAAMA,EAAMC,iBAAkBA,EAAkBC,mBAAoBA,GAA7EF,EAAKI,UCjE7E,IAYe0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e50530b2.chunk.js","sourcesContent":["import './App.css';\r\nimport styled from 'styled-components';\r\n\r\nconst TodoItemWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 8px 16px;\r\n  border: 1px solid black;\r\n\r\n  & + & {\r\n    margin-top: 10px; \r\n  }\r\n`\r\n\r\nconst TodoContent = styled.div`\r\n  color: rgba(2, 40, 77);\r\n  ${props => props.isDone && `\r\n    text-decoration: line-through;\r\n  `}\r\n`\r\n\r\nconst TodoButtonWrapper = styled.div``\r\n\r\nconst Button = styled.button`\r\n  padding: 4px;\r\n  color: black;\r\n\r\n  &:hover {\r\n    color: red;\r\n  }\r\n\r\n  & + & {\r\n    margin-left: 4px;\r\n  }\r\n`\r\n\r\nexport default function TodoItem ({ className, size, todo, handleDeleteTodo, handleToggleIsDone }) {\r\n  return (\r\n    <TodoItemWrapper className={className} data-todo-id={todo.id} isHiden={todo.isHiden}>\r\n      <TodoContent isDone={todo.isDone} size={size}>{todo.content}</TodoContent>\r\n      <TodoButtonWrapper>\r\n        <Button onClick={() => {handleToggleIsDone(todo.id)}}>\r\n          {todo.isDone ? '未完成' : '已完成'}\r\n        </Button>\r\n        <Button onClick={() =>{handleDeleteTodo(todo.id)}}>刪除</Button>\r\n      </TodoButtonWrapper>\r\n    </TodoItemWrapper>\r\n  )\r\n}\r\n","import TodoItem from './TodoItem'\nimport React, { useState, useRef } from 'react'\n\nconst filterStandard = {\n  all: () => true, \n  done: (todo) => todo.isDone, \n  undone: (todo) => !todo.isDone, \n}\n\nexport default function App() {\n  const [todos, setTodos] = useState([])\n  const [value, setValue] = useState(\"\")\n  const [filter, setFilter] = useState(\"all\")\n  const id = useRef(1)\n\n  // 新增 todo\n  const handleButtonClick = () => {\n    setTodos([{\n      id:id.current, \n      content: value, \n      isDone: false\n    }, ...todos])\n    setValue('')\n    id.current++\n  }\n\n  // 清空 todo\n  const handleClearTodo = () => {\n    setTodos([])\n  }\n\n  // 綁定輸入框\n  const handleInputChange = (e) => {\n    setValue(e.target.value)\n  }\n\n  // 已完成與未完成\n  const handleToggleIsDone = id => {\n    setTodos(todos.map(todo => {\n      if(todo.id !== id) return todo\n      return {\n        ...todo, \n        isDone: !todo.isDone\n      }\n    }))\n  }\n\n  // 刪除 todo\n  const handleDeleteTodo = id => {\n    setTodos(todos.filter(todo => todo.id !== id))\n  }\n\n  const handleFilterTodo = status => {\n    setFilter(status)\n  }\n \n  return (\n    <div className=\"App\">\n      <input type=\"text\" placeholder=\"todo\" value={value} onChange={handleInputChange} />\n      <button onClick={handleButtonClick}>Add todo</button>\n      <button onClick={handleClearTodo}>清空</button>\n      <button onClick={() => handleFilterTodo(\"all\")}>ALL</button>\n      <button onClick={() => handleFilterTodo(\"done\")}>已完成</button>\n      <button onClick={() => handleFilterTodo(\"undone\")}>未完成</button>\n      {\n        todos.filter(filterStandard[filter]).map(todo => <TodoItem key={todo.id} todo={todo} handleDeleteTodo={handleDeleteTodo} handleToggleIsDone={handleToggleIsDone} />)\n      } \n    </div>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />, \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}